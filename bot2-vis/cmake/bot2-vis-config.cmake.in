# - Config file for the @PROJECT_NAME@ package

if(CMAKE_VERSION VERSION_LESS 3.1)
  message(FATAL_ERROR "CMake >= 3.1 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 3.1)
set(CMAKE_IMPORT_FILE_VERSION 1)

if(CMAKE_VERSION VERSION_LESS 3.9)
  # Imported from CMake 3.9.0
  macro(find_dependency dep)
    if (NOT ${dep}_FOUND)
      set(cmake_fd_quiet_arg)
      if(${CMAKE_FIND_PACKAGE_NAME}_FIND_QUIETLY)
        set(cmake_fd_quiet_arg QUIET)
      endif()
      set(cmake_fd_required_arg)
      if(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED)
        set(cmake_fd_required_arg REQUIRED)
      endif()

      get_property(cmake_fd_alreadyTransitive GLOBAL PROPERTY
        _CMAKE_${dep}_TRANSITIVE_DEPENDENCY
      )

      find_package(${dep} ${ARGN}
        ${cmake_fd_quiet_arg}
        ${cmake_fd_required_arg}
      )

      if(NOT DEFINED cmake_fd_alreadyTransitive OR cmake_fd_alreadyTransitive)
        set_property(GLOBAL PROPERTY _CMAKE_${dep}_TRANSITIVE_DEPENDENCY TRUE)
      endif()

      if (NOT ${dep}_FOUND)
        set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "${CMAKE_FIND_PACKAGE_NAME} could not be found because dependency ${dep} could not be found.")
        set(${CMAKE_FIND_PACKAGE_NAME}_FOUND False)
        return()
      endif()
      set(cmake_fd_required_arg)
      set(cmake_fd_quiet_arg)
      set(cmake_fd_exact_arg)
    endif()
  endmacro()
else()
  include(CMakeFindDependencyMacro)
endif()

find_dependency(bot2-core CONFIG HINTS "${${CMAKE_FIND_PACKAGE_NAME}_IMPORT_PREFIX}/lib/cmake/bot2-core")

list(INSERT CMAKE_MODULE_PATH 0 "${CMAKE_CURRENT_LIST_DIR}/modules")
find_dependency(GLib2 2.32 MODULE)
find_dependency(M MODULE)
list(REMOVE_AT CMAKE_MODULE_PATH 0)
find_dependency(GLUT MODULE)
if(CMAKE_VERSION VERSION_LESS 3.12)
  list(INSERT CMAKE_MODULE_PATH 0 "${CMAKE_CURRENT_LIST_DIR}/modules/3.12")
endif()
find_dependency(JPEG MODULE)
if(CMAKE_VERSION VERSION_LESS 3.12)
  list(REMOVE_AT CMAKE_MODULE_PATH 0)
endif()
find_dependency(lcm 1.4 CONFIG
  HINTS "${${CMAKE_FIND_PACKAGE_NAME}_IMPORT_PREFIX}/lib/cmake/lcm"
)
if(CMAKE_VERSION VERSION_LESS 3.10)
  list(INSERT CMAKE_MODULE_PATH 0 "${CMAKE_CURRENT_LIST_DIR}/modules/3.10")
endif()
set(OpenGL_GL_PREFERENCE LEGACY)
find_dependency(OpenGL MODULE)
unset(OpenGL_GL_PREFERENCE)
if(CMAKE_VERSION VERSION_LESS 3.10)
  list(REMOVE_AT CMAKE_MODULE_PATH 0)
endif()
if(CMAKE_VERSION VERSION_LESS 3.5)
  list(INSERT CMAKE_MODULE_PATH 0 "${CMAKE_CURRENT_LIST_DIR}/modules/3.5")
endif()
find_dependency(PNG MODULE)
if(CMAKE_VERSION VERSION_LESS 3.5)
  list(REMOVE_AT CMAKE_MODULE_PATH 0)
endif()
find_dependency(Threads MODULE)
if(CMAKE_VERSION VERSION_LESS 3.14)
  list(INSERT CMAKE_MODULE_PATH 0 "${CMAKE_CURRENT_LIST_DIR}/modules/3.14")
endif()
find_dependency(X11 MODULE)
if(CMAKE_VERSION VERSION_LESS 3.14)
  list(REMOVE_AT CMAKE_MODULE_PATH 0)
endif()
find_dependency(ZLIB MODULE)

# Our library dependencies (contains definitions for IMPORTED targets)
if(NOT TARGET @NAMESPACE@@PROJECT_NAME@)
  include(${CMAKE_CURRENT_LIST_DIR}/@EXPORT_FILE@)
endif()

unset(${CMAKE_FIND_PACKAGE_NAME}_IMPORT_PREFIX)
unset(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
